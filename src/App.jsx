import { useState } from "react";
import { CheckCircle2, ArrowRight, Sparkles, Shield, Users, BookOpen, Clock, LineChart, Phone, Mail, MapPin, Star, MessageCircle, Menu, X, TrendingUp, Award, Zap, Globe, Lock, GraduationCap } from "lucide-react";
import axios from "axios";
import PerformanceOverview from "./components/PerformanceOverview";
import FeatureRow from "./components/FeatureRow";
import ChatbotPopup from "./components/ChatbotPopup";
/**
 * EduCRM White‚ÄìBlue Landing Page (Gradient Edition)
 * ------------------------------------------------------------
 * - √Åp d·ª•ng 2 gradient ch·ªß ƒë·∫°o do b·∫°n cung c·∫•p:
 *   + primary: linear-gradient(135deg, #3B82F6, #06B6D4)
 *   + secondary: linear-gradient(135deg, #22D3EE, #3B82F6)
 * - ƒê√£ thay to√†n b·ªô inline gradient r·ªùi r·∫°c b·∫±ng token d√πng l·∫°i.
 * - Th√™m GButton, GBadge, GSection ƒë·ªÉ t√°i s·ª≠ d·ª•ng v√† ƒë·ªìng b·ªô style.
 */

const container = "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8";
const section = "py-16 sm:py-20";
const btn =
  "inline-flex items-center gap-2 rounded-2xl px-5 py-3 text-sm font-semibold transition shadow-sm";

// üåà Gradient tokens
const GRADIENTS = {
  primary: "linear-gradient(135deg, #3B82F6, #06B6D4)",
  secondary: "linear-gradient(135deg, #22D3EE, #3B82F6)",
};

// üîò Reusable gradient button
function GButton({ children, gradient = "secondary", className = "", as = "a", ...props }) {
  const Comp = as;
  return (
    <Comp
      {...props}
      className={`${btn} text-white shadow-lg hover:shadow-xl transform hover:scale-[1.02] ${className}`}
      style={{ background: GRADIENTS[gradient] }}
    >
      {children}
    </Comp>
  );
}

// üè∑Ô∏è Reusable gradient badge/pill
function GBadge({ children, gradient = "secondary", className = "" }) {
  return (
    <span
      className={`inline-flex items-center gap-2 rounded-full text-white px-3 py-1 text-xs font-medium shadow-sm ${className}`}
      style={{ background: GRADIENTS[gradient], border: "1px solid rgba(255,255,255,0.35)" }}
    >
      {children}
    </span>
  );
}

// üß± Section with gradient background
function GSection({ gradient = "primary", children, className = "", overlay = false, id }) {
  return (
    <section id ={id} className={`relative overflow-hidden ${className}`} style={{ background: GRADIENTS[gradient] }}>
      {overlay && <div className="absolute inset-0 pointer-events-none" style={{ background: "radial-gradient(circle at 1px 1px, rgba(0,0,0,.18) 1px, transparent 0)", backgroundSize: "22px 22px", opacity: 0.12 }} />}
      {children}
    </section>
  );
}

function Navbar({ onOpenLogin }) {
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);

  return (
   <div style={{marginTop: "20px"}} className="fixed top-0 inset-x-0 z-50">
   <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div
           className={[
            "flex items-center justify-evenly",
            "h-16 sm:h-18 px-3 sm:px-5",
            // N·ªÅn & hi·ªáu ·ª©ng
            "bg-white/95 backdrop-blur-md supports-[backdrop-filter]:bg-white/85",
            "border border-slate-200/70 ring-1 ring-black/5 shadow-md",
            // PILL tr√≤n h·∫≥n
            "rounded-[999px] overflow-hidden",
            "transition-all duration-150",
            mobileMenuOpen ? "rounded-b-none" : "",
          ].join(" ")}
        >
          {/* Logo */}
          <div className="flex items-center gap-3">
            <div className="size-12 flex justify-center items-center">
              <a href="/"> <img style={{ maxWidth: "150%" }} src="logo.png" alt="logo" /></a>
             
            </div>
          </div>

          {/* Nav desktop */}
          <nav className="hidden md:flex items-center gap-8 text-[15px] lg:text-base xl:text-lg text-slate-700">
            <a className="hover:text-blue-700 transition-colors font-medium" href="#features">T√≠nh nƒÉng</a>
            <a className="hover:text-blue-700 transition-colors font-medium" href="#pricing">Gi√° d·ªãch v·ª•</a>
            <a className="hover:text-blue-700 transition-colors font-medium" href="#testimonials">ƒê√°nh gi√°</a>
            <a className="hover:text-blue-700 transition-colors font-medium" href="#faq">FAQ</a>
            <a className="hover:text-blue-700 transition-colors font-medium" href="#contact">Li√™n h·ªá</a>
          </nav>

          {/* Actions */}
          <div className="flex items-center gap-3">
            <a
              href="#contact"
              className="hidden sm:inline-flex items-center gap-2 border border-blue-200 text-blue-700 hover:bg-blue-50 hover:border-blue-300 rounded-xl px-4 py-2 text-base font-medium transition-all"
            >
              <MessageCircle size={18} />
              Li√™n h·ªá
            </a>

            <GButton
              as="a"
              href="#demo"
              onClick={(e) => { e.preventDefault(); onOpenLogin && onOpenLogin(); }}
              gradient="secondary"
              className="px-5 py-2.5 text-base"
            >
              <Zap size={18} />
              D√πng th·ª≠
            </GButton>

            <button
              className="md:hidden p-2 rounded-lg hover:bg-slate-100 transition-colors"
              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
            >
              {mobileMenuOpen ? <X size={22} /> : <Menu size={22} />}
            </button>
          </div>
        </div>

        {/* Mobile Menu (n·∫±m c√πng kh·ªëi, bo tr√≤n ƒë√°y) */}
        {mobileMenuOpen && (
          <div className="md:hidden bg-white border-x border-b border-slate-200 shadow-lg rounded-b-2xl overflow-hidden">
            <div className="px-4 py-4 space-y-3">
              <a className="block py-2 text-base text-slate-700 hover:text-blue-700 font-medium transition-colors" href="#features" onClick={() => setMobileMenuOpen(false)}>T√≠nh nƒÉng</a>
              <a className="block py-2 text-base text-slate-700 hover:text-blue-700 font-medium transition-colors" href="#pricing" onClick={() => setMobileMenuOpen(false)}>Gi√° d·ªãch v·ª•</a>
              <a className="block py-2 text-base text-slate-700 hover:text-blue-700 font-medium transition-colors" href="#testimonials" onClick={() => setMobileMenuOpen(false)}>ƒê√°nh gi√°</a>
              <a className="block py-2 text-base text-slate-700 hover:text-blue-700 font-medium transition-colors" href="#faq" onClick={() => setMobileMenuOpen(false)}>FAQ</a>
              <a className="block py-2 text-base text-slate-700 hover:text-blue-700 font-medium transition-colors" href="#contact" onClick={() => setMobileMenuOpen(false)}>Li√™n h·ªá</a>
              <div className="pt-3 border-t border-slate-200">
                <GButton as="a" href="#demo" className="block w-full justify-center text-base py-3">
                  D√πng th·ª≠ mi·ªÖn ph√≠
                </GButton>
              </div>
            </div>
          </div>
        )}
      </div>
   </div>
  );
}



function Hero({ onOpenLogin }) {
  return (
    <GSection gradient="primary" overlay className="text-slate-800">
     <div
  className={`
    ${container} ${section}
    pt-10 md:pt-24 pb-10 md:pb-12
    md:min-h-[100dvh]
    supports-[height:100svh]:md:min-h-[100svh]
    lg:h-[100dvh]
    supports-[height:100svh]:lg:h-[100svh]
  `}
>

        <div className="grid lg:grid-cols-2 gap-16 items-center mt-[90px]">
          <div className="space-y-8">
            <div className="space-y-6">
              <div className="animate-fade-in-up" style={{animationDelay: '0.1s'}}>
                <GBadge gradient="secondary">
                  <Sparkles size={16} className="text-white animate-pulse" />
                  N·ªÅn t·∫£ng gi√°o d·ª•c th√¥ng minh
                </GBadge>
              </div>

              <div className="animate-fade-in-up" style={{animationDelay: '0.2s'}}>
                <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold leading-tight tracking-tight text-white">
                  <span className="block animate-slide-in-left" style={{animationDelay: '0.3s'}}>N·ªÅn T·∫£ng Gi√°o D·ª•c</span>
                  <span className="block bg-gradient-to-r from-white to-cyan-200 bg-clip-text text-transparent animate-slide-in-left" style={{animationDelay: '0.4s'}}>Th√¥ng Minh</span>
                  <span className="block animate-slide-in-left" style={{animationDelay: '0.5s'}}>H·ªó Tr·ª£ B·ªüi AI</span>
                </h1>
              </div>

              <div className="animate-fade-in-up" style={{animationDelay: '0.6s'}}>
                <p className="text-lg text-white/90 leading-relaxed max-w-2xl">
                  Cho c√°c trung t√¢m ngo·∫°i ng·ªØ ƒë·ªÉ t·ªëi ∆∞u v·∫≠n h√†nh v√† tƒÉng tr∆∞·ªüng b·ªÅn v·ªØng.
                  <span className="text-white font-semibold"> (EN, JP, KR, CN)</span>
                </p>
              </div>
            </div>

            <div className="flex flex-col sm:flex-row gap-4 animate-fade-in-up" style={{animationDelay: '0.7s'}}>
              <GButton
                as="a"
                href="#demo"
                onClick={(e) => { e.preventDefault(); onOpenLogin && onOpenLogin(); }}
                gradient="secondary"
                className="hover:scale-105 transition-transform duration-300"
              >
                <Zap size={18} className="text-white animate-bounce" />
                D√πng th·ª≠ mi·ªÖn ph√≠
                <ArrowRight size={18} />
              </GButton>
              <a className={`${btn} border border-white/30 text-white hover:bg-white/10 transition backdrop-blur hover:scale-105`} href="#contact">
                <MessageCircle size={18} className="text-white" />
                Nh·∫≠n t∆∞ v·∫•n
              </a>
            </div>

           
          </div>

          <div className="relative lg:ml-8 animate-fade-in-right" style={{animationDelay: '0.9s'}}>
            <div className="absolute -inset-6 rounded-3xl bg-white/20 blur-xl animate-pulse"/>
            <div className="relative rounded-3xl overflow-hidden ring-1 ring-white/30 shadow-lg hover:shadow-2xl transition-all duration-500 hover:scale-105">
              <video src="video.mp4" autoPlay muted loop playsInline className="w-full h-96 object-cover"></video>
            </div>
          
          </div>
        </div>
      </div>
    </GSection>
  );
}

function Metrics() {
  const items = [
    {
      label: "Trung t√¢m s·ª≠ d·ª•ng",
      value: "500+",
      icon: <Users size={22} className="opacity-90" />,
      description: "Trung t√¢m gi√°o d·ª•c tin t∆∞·ªüng",
    },
    {
      label: "Ng∆∞·ªùi d√πng",
      value: "10k+",
      icon: <TrendingUp size={22} className="opacity-90" />,
      description: "Ng∆∞·ªùi d√πng t√≠ch c·ª±c",
    },
    {
      label: "TƒÉng hi·ªáu su·∫•t",
      value: "+32%",
      icon: <Award size={22} className="opacity-90" />,
      description: "Hi·ªáu qu·∫£ v·∫≠n h√†nh",
    },
  ];

  return (
    <section className="bg-white">
      <div className={`${container} ${section}`}>
        <div className="text-center mb-12 animate-fade-in-up">
          <h2 className="text-3xl font-bold text-slate-900 mb-4 animate-scale-in stagger-1">
            S·ªë li·ªáu ·∫•n t∆∞·ª£ng
          </h2>
          <p className="text-lg text-slate-600 animate-fade-in-up stagger-2">
            Nh·ªØng con s·ªë ch·ª©ng minh hi·ªáu qu·∫£ c·ªßa XinKEdu
          </p>
        </div>

        <div className="grid sm:grid-cols-3 gap-8">
          {items.map((item, index) => (
            <div key={item.label} className={`group relative animate-bounce-in stagger-${index + 3}`}>
              {/* Outer gradient border */}
              <div
                className="p-[1px] rounded-3xl"
                style={{ background: GRADIENTS.primary }}
              >
                {/* Card */}
                <div className="rounded-[22px] bg-white p-8 shadow-lg ring-1 ring-slate-200 transition-all duration-500 hover:shadow-xl hover:-translate-y-1.5">
                  <div className="flex items-center justify-between mb-4">
                    {/* Icon chip with gradient */}
                    <div
                      className="p-3 rounded-2xl text-white transition-all duration-300 group-hover:scale-110"
                      style={{ background: GRADIENTS.secondary }}
                    >
                      {item.icon}
                    </div>

                    <div className="text-right">
                      <p className="text-4xl font-extrabold tracking-tight text-slate-900 transition-transform duration-300 group-hover:scale-110">
                        {item.value}
                      </p>
                      <p className="text-sm text-slate-500">{item.description}</p>
                    </div>
                  </div>

                  <p className="text-lg font-semibold text-slate-800">{item.label}</p>

                  {/* Floating particles (accent with brand colors) */}
                  <div className="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-500">
                    <div
                      className="w-2 h-2 rounded-full animate-float"
                      style={{ background: "#3B82F6", animationDelay: "0s" }}
                    />
                    <div
                      className="w-1 h-1 rounded-full animate-float mt-2"
                      style={{ background: "#22D3EE", animationDelay: "0.45s" }}
                    />
                  </div>
                </div>
              </div>
              {/* subtle glow on hover */}
              <div
                className="pointer-events-none absolute -inset-1 rounded-3xl blur-xl opacity-0 group-hover:opacity-40 transition"
                style={{ background: GRADIENTS.secondary }}
              />
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}





function Feature() {
  return (
    <section id="features" className="bg-white">
      <div className={`${container} ${section} space-y-24`}>
        <div className="text-center max-w-3xl mx-auto">
          <h2 className="text-3xl sm:text-4xl font-bold text-slate-900 mb-6">
            T√≠nh nƒÉng n·ªïi b·∫≠t
          </h2>
          <p className="text-xl text-slate-600">
            Gi·∫£i ph√°p to√†n di·ªán cho m·ªçi nhu c·∫ßu qu·∫£n l√Ω gi√°o d·ª•c
          </p>
        </div>

        {/* AI ƒë·ªÅ thi */}
        <FeatureRow
          reverse
          title="T·∫°o ƒë·ªÅ thi b·∫±ng AI (nhanh & th√¥ng minh)"
          desc="Sinh ƒë·ªÅ t·ª± ƒë·ªông theo ch·ªß ƒë·ªÅ, ƒë·ªô kh√≥, chu·∫©n ƒë·∫ßu ra. H·ªó tr·ª£ nhi·ªÅu lo·∫°i c√¢u h·ªèi v√† ch·∫•m ƒëi·ªÉm t·ª± ƒë·ªông."
          bullets={[
            "Sinh c√¢u h·ªèi: Tr·∫Øc nghi·ªám, ƒê√∫ng/Sai, ƒêi·ªÅn khuy·∫øt, T·ª± lu·∫≠n",
            "ƒêi·ªÅu ch·ªânh ƒë·ªô kh√≥, k·ªπ nƒÉng & chu·∫©n ƒë·∫ßu ra (Bloom/CEFR)",
            "Ng√¢n h√†ng c√¢u h·ªèi theo ch·ªß ƒë·ªÅ, tag & m·ª©c ƒë·ªô",
            "T·ª± ƒë·ªông ch·ªëng tr√πng c√¢u h·ªèi & x√°o th·ª© t·ª± ƒë√°p √°n",
            "Gi·∫£i th√≠ch ƒë√°p √°n, g·ª£i √Ω ch·∫•m & thang ƒëi·ªÉm",
          
          ]}
          img="taodethi.png"
          icon={<BookOpen size={28} />}
        />

        {/* OCR ƒë·ªÅ thi */}
        <FeatureRow
          title="T·∫°o ƒë·ªÅ thi t·ª´ ·∫£nh (OCR)"
          desc="Ch·ª•p/t·∫£i ·∫£nh ƒë·ªÅ thi gi·∫•y, h·ªá th·ªëng OCR & chu·∫©n h√≥a format, xu·∫•t ƒë·ªÅ trong v√†i gi√¢y."
          bullets={[
            "Nh·∫≠n di·ªán ch·ªØ Vi·ªát/EN ch√≠nh x√°c, ch·ªëng nhi·ªÖu",
            "T·ª± ƒë·ªông crop/deskew & l√†m s·∫°ch n·ªÅn",
            "Chu·∫©n h√≥a b·ªë c·ª•c, t√°ch c√¢u h·ªèi/ƒë√°p √°n",
            "T·∫°o ng√¢n h√†ng c√¢u h·ªèi t·ª´ ·∫£nh ch·ªâ v·ªõi 1 l·∫ßn ch·ª•p",
            "Random ph∆∞∆°ng √°n & ƒë√°nh s·ªë t·ª± ƒë·ªông",
         
          ]}
          img="taodeOCR.png"
          icon={<GraduationCap size={28} />}
        />

        {/* AI tr·ª£ gi·∫£ng live */}
        <FeatureRow
          title="AI tr·ª£ gi·∫£ng Live & ph√¢n t√≠ch bu·ªïi d·∫°y"
          desc="Theo d√µi th·ªùi gian th·ª±c, g·ª£i √Ω t∆∞∆°ng t√°c, ƒë√°nh d·∫•u highlight & xu·∫•t b√°o c√°o l·ªõp h·ªçc."
          bullets={[
            "G·ª£i √Ω quiz/b√†i t·∫≠p theo ti·∫øn ƒë·ªô trong gi·ªù h·ªçc",
            "H·ªèi AI ki·∫øn th·ª©c v·ª´a ƒë∆∞·ª£c gi·∫£ng ƒë·ªÉ c·ªßng c·ªë",
            "Theo d√µi m·ª©c ƒë·ªô t∆∞∆°ng t√°c & c·∫£nh b√°o h·ªçc vi√™n y·∫øu",
            "ƒê√°nh d·∫•u highlight theo m·ªëc th·ªùi gian (timestamp)",
            "Thu ph·∫£n h·ªìi nhanh (poll) & t·ªïng h·ª£p √Ω ki·∫øn",
         
          ]}
          img="meeting.png"
          icon={<LineChart size={28} />}
        />

        {/* Check-in / out */}
        <FeatureRow
          reverse
          title="Check-in / Check-out d·∫°y h·ªçc"
          desc="ƒêi·ªÉm danh ca d·∫°y b·∫±ng m·ªôt ch·∫°m: GPS + ghi ch√∫ t·ª©c th·ªùi."
          bullets={[
            "Check-in theo v·ªã tr√≠ & th·ªùi gian, h·ªó tr·ª£ ngo·∫°i tuy·∫øn",
            "·∫¢nh x√°c th·ª±c & ghi ch√∫ minh ch·ª©ng ca d·∫°y",
            "C·∫£nh b√°o ƒëi mu·ªôn/v·ªÅ s·ªõm & th·ªëng k√™ chuy√™n c·∫ßn",
            "T·ª± ƒë·ªông ƒë·ªëi so√°t c√¥ng theo ca/l·ªãch d·∫°y",
            "Xu·∫•t d·ªØ li·ªáu ch·∫•m c√¥ng ph·ª•c v·ª• t√≠nh l∆∞∆°ng",
            
          ]}
          img="inout.png"
          icon={<Shield size={28} />}
        />

        {/* X·∫øp l·ªãch d·∫°y */}
        <FeatureRow
          title="X·∫øp l·ªãch d·∫°y cho gi√°o vi√™n"
          desc="S·∫Øp x·∫øp ca d·∫°y tr·ª±c quan, tr√°nh tr√πng ca v√† t·ª± ƒë·ªông nh·∫Øc l·ªãch qua Zalo/Email."
          bullets={[
            "K√©o-th·∫£ ca d·∫°y theo tu·∫ßn/th√°ng, template l·ªãch",
            "Ph√°t hi·ªán xung ƒë·ªôt ph√≤ng/gi·ªù/gi√°o vi√™n theo th·ªùi gian th·ª±c",
            "Qu·∫£n l√Ω nhi·ªÅu c∆° s·ªü/ph√≤ng h·ªçc & thi·∫øt b·ªã",
            "L·ªçc theo m√¥n, c·∫•p ƒë·ªô, ca, gi√°o vi√™n & tr·∫°ng th√°i",
            "ƒê·ªìng b·ªô l·ªãch v·ªõi AI nh·∫Øc l·ªãch, email/Zalo",
           
          ]}
          img="classm.png"
          icon={<Clock size={28} />}
        />

        {/* Thi & xem ƒëi·ªÉm */}
        <FeatureRow
          reverse
          title="Thi & xem ƒëi·ªÉm online"
          desc="H·ªçc sinh l√†m b√†i tr√™n web/mobile, ch·ªëng gian l·∫≠n nh·∫π, xem ƒëi·ªÉm & l·ªùi gi·∫£i ngay sau khi n·ªôp."
          bullets={[
            "Ph√≤ng thi theo l·ªãch, m√£ thi & gi·ªõi h·∫°n th·ªùi gian",
            "Gi√°m s√°t camera/mic nh·∫π nh√†ng, ph√°t hi·ªán tab-out",
            "Ch·∫•m t·ª± ƒë·ªông, hi·ªÉn th·ªã ƒëi·ªÉm & th·ª© h·∫°ng t·ª©c th√¨",
            "Xem ƒë√°p √°n, l·ªùi gi·∫£i & ph√¢n t√≠ch c√¢u sai",
            "Thi l·∫°i c√≥ ƒëi·ªÅu ki·ªán (s·ªë l·∫ßn, ng∆∞·ª°ng ƒëi·ªÉm, ng√¢n h√†ng kh√°c)",
          ]}
          img="exam.jpg"
          icon={<CheckCircle2 size={28} />}
        />

        {/* --- T√çNH NƒÇNG ƒê·∫∂C BI·ªÜT --- */}
        <div className="space-y-10">
          <div className="text-center max-w-3xl mx-auto">
            <h3 className="text-2xl sm:text-3xl font-bold text-slate-900">T√≠nh nƒÉng ƒë·∫∑c bi·ªát</h3>
            <p className="mt-3 text-slate-600">
              B·ªô c√¥ng c·ª• n√¢ng cao gi√∫p trung t√¢m v·∫≠n h√†nh tr∆°n tru v√† minh b·∫°ch.
            </p>
          </div>

          {/* Card 1: CRM & Nh√¢n s·ª± (d√πng FeatureRow + ·∫£nh) */}
          <div className="group relative">
            <div
              className="absolute -inset-1 rounded-3xl blur-2xl opacity-0 group-hover:opacity-35 transition duration-500"
              style={{ background: GRADIENTS.secondary }}
            />
            <div className="relative p-[1px] rounded-3xl" style={{ background: GRADIENTS.primary }}>
              <div className="rounded-[22px] bg-white shadow-lg ring-1 ring-slate-200 overflow-hidden transition-all duration-500 group-hover:shadow-xl group-hover:-translate-y-1.5">
                <div className="flex items-center justify-between px-4 sm:px-6 pt-5">
                  <span
                    className="inline-flex items-center gap-2 px-3 py-1 rounded-full text-xs font-semibold text-white"
                    style={{ background: GRADIENTS.secondary }}
                  >
                    ‚ú® ƒê·∫∂C BI·ªÜT
                  </span>
                  <div className="relative h-6 w-24 overflow-hidden rounded-full">
                    <div
                      className="absolute inset-y-0 -left-16 w-20 opacity-20 group-hover:translate-x-28 transition-transform duration-700"
                      style={{ background: "linear-gradient(90deg, transparent, #fff, transparent)" }}
                    />
                  </div>
                </div>

                <div className="px-4 sm:px-6 pb-6 pt-2">
                  <FeatureRow
                    title="CRM & Qu·∫£n l√Ω nh√¢n s·ª±"
                    desc="Theo d√µi pipeline tuy·ªÉn sinh, qu·∫£n l√Ω h·ªì s∆° & ph√¢n quy·ªÅn nh√¢n s·ª±; ƒë·ªìng b·ªô KPI v√† b·∫£ng c√¥ng t·ª´ ca d·∫°y."
                    bullets={[
                      "Pipeline tuy·ªÉn sinh theo giai ƒëo·∫°n & x√°c su·∫•t",
                      "Lead scoring, ngu·ªìn lead & chƒÉm s√≥c t·ª± ƒë·ªông",
                      "H·ªì s∆° gi√°o vi√™n/nh√¢n s·ª±, h·ª£p ƒë·ªìng & ch·ª©ng ch·ªâ",
                      "Ph√¢n quy·ªÅn chi ti·∫øt theo vai tr√≤ & ƒë∆°n v·ªã",
                      "Ch·∫•m c√¥ng/KPI ƒë·ªìng b·ªô t·ª´ check-in & l·ªãch d·∫°y",
                    ]}
                    img="crm.jpg"
                    icon={<Shield size={28} />}
                  />
                </div>

                <div className="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-500">
                  <div className="w-2 h-2 rounded-full animate-float" style={{ background: "#3B82F6", animationDelay: "0s" }} />
                  <div className="w-1 h-1 rounded-full mt-2 animate-float" style={{ background: "#22D3EE", animationDelay: "0.4s" }} />
                </div>
              </div>
            </div>
          </div>

          {/* Card 2: H·ªó tr·ª£ K·∫ø to√°n (d√πng FeatureRow + ·∫£nh, ƒë·∫£o chi·ªÅu) */}
          <div className="group relative">
            <div
              className="absolute -inset-1 rounded-3xl blur-2xl opacity-0 group-hover:opacity-35 transition duration-500"
              style={{ background: GRADIENTS.secondary }}
            />
            <div className="relative p-[1px] rounded-3xl" style={{ background: GRADIENTS.primary }}>
              <div className="rounded-[22px] bg-white shadow-lg ring-1 ring-slate-200 overflow-hidden transition-all duration-500 group-hover:shadow-xl group-hover:-translate-y-1.5">
                <div className="flex items-center justify-between px-4 sm:px-6 pt-5">
                  <span
                    className="inline-flex items-center gap-2 px-3 py-1 rounded-full text-xs font-semibold text-white"
                    style={{ background: GRADIENTS.secondary }}
                  >
                    ‚ú® ƒê·∫∂C BI·ªÜT
                  </span>
                  <div className="relative h-6 w-24 overflow-hidden rounded-full">
                    <div
                      className="absolute inset-y-0 -left-16 w-20 opacity-20 group-hover:translate-x-28 transition-transform duration-700"
                      style={{ background: "linear-gradient(90deg, transparent, #fff, transparent)" }}
                    />
                  </div>
                </div>

                <div className="px-4 sm:px-6 pb-6 pt-2">
                  <FeatureRow
                    reverse
                    title="H·ªó tr·ª£ k·∫ø to√°n"
                    desc="Qu·∫£n l√Ω thu h·ªçc ph√≠, c√¥ng n·ª£; b√°o c√°o doanh thu/chi ph√≠ theo l·ªõp‚Äìkh√≥a; xu·∫•t file ƒë·ªëi so√°t minh b·∫°ch."
                    bullets={[
                      "L·∫≠p h√≥a ƒë∆°n/phi·∫øu thu h·ªçc ph√≠ theo k·ª≥, g√≥i",
                      "Theo d√µi c√¥ng n·ª£ & nh·∫Øc ph√≠ t·ª± ƒë·ªông ƒëa k√™nh",
                      "Phi·∫øu thu/chi & nh·∫≠t k√Ω qu·ªπ minh b·∫°ch",
                      "B√°o c√°o doanh thu‚Äìchi ph√≠ theo l·ªõp/kh√≥a/c∆° s·ªü",
                      "Xu·∫•t file k·∫ø to√°n (Excel/CSV) & ƒë·ªëi so√°t nhanh",

                    ]}
                    img="ketoan.png"
                    icon={<LineChart size={28} />}
                  />
                </div>

                <div className="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-500">
                  <div className="w-2 h-2 rounded-full animate-float" style={{ background: "#3B82F6", animationDelay: "0s" }} />
                  <div className="w-1 h-1 rounded-full mt-2 animate-float" style={{ background: "#22D3EE", animationDelay: "0.4s" }} />
                </div>
              </div>
            </div>
          </div>
        </div>
        {/* --- END: T√çNH NƒÇNG ƒê·∫∂C BI·ªÜT --- */}
      </div>
    </section>
  );
}




/** Card kh√¥ng d√πng ·∫£nh, icon + text + bullets */
function FeatureCard({ icon, title, desc, bullets, index = 0 }) {
  return (
    <div className={`group relative overflow-hidden rounded-3xl bg-white p-8 ring-1 ring-slate-200 shadow-lg transition-all duration-500 hover:shadow-2xl hover:ring-blue-200 hover-lift animate-slide-up-stagger stagger-${(index % 6) + 1}`}>
      {/* halo gradient nh·∫π ƒë·ªÉ thay "h√¨nh minh ho·∫°" */}
      <div className="pointer-events-none absolute -top-24 -right-24 h-56 w-56 rounded-full bg-gradient-to-br from-sky-200/60 to-cyan-100/40 blur-3xl opacity-60 group-hover:opacity-90 transition-all duration-500 group-hover:scale-110" />
      
      {/* Shimmer effect */}
      <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 animate-shimmer" />
      
      <div className="flex items-start gap-4 relative z-10">
        <div className="shrink-0 grid place-items-center size-12 rounded-2xl bg-gradient-to-br from-sky-500 to-blue-600 text-white shadow-lg group-hover:shadow-xl transition-all duration-300">
          {icon}
        </div>
        <div className="flex-1">
          <h4 className="text-lg font-semibold text-slate-900 group-hover:text-blue-700 transition-colors duration-300">{title}</h4>
          <p className="mt-2 text-slate-600 group-hover:text-slate-700 transition-colors duration-300">{desc}</p>
          <ul className="mt-4 space-y-2 text-slate-700">
            {bullets.map((b, i) => (
              <li key={i} className="flex gap-2 group-hover:translate-x-1 transition-transform duration-300" style={{transitionDelay: `${i * 50}ms`}}>
                <span className="mt-1 size-1.5 rounded-full bg-sky-500/80 group-hover:bg-blue-500 transition-colors duration-300" />
                <span className="group-hover:text-slate-800 transition-colors duration-300">{b}</span>
              </li>
            ))}
          </ul>
        </div>
      </div>
      
      {/* Floating particles effect */}
      <div className="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-500">
        <div className="w-2 h-2 bg-blue-400 rounded-full animate-float" style={{animationDelay: '0s'}} />
        <div className="w-1 h-1 bg-cyan-400 rounded-full animate-float mt-2" style={{animationDelay: '0.5s'}} />
        <div className="w-1.5 h-1.5 bg-sky-400 rounded-full animate-float mt-1" style={{animationDelay: '1s'}} />
      </div>
    </div>
  );
}


function PlanCard({ ribbon, gradient, price, unit, features, note, highlight=false }) {
  const [showAll, setShowAll] = useState(false);
  const VISIBLE_LIMIT = 8;
  const hasMore = Array.isArray(features) && features.length > VISIBLE_LIMIT;
  const visibleFeatures = showAll ? features : (features || []).slice(0, VISIBLE_LIMIT);

  return (
    <div className={`relative rounded-2xl border ${highlight ? 'border-blue-200' : 'border-slate-200'} bg-white shadow-sm h-full flex flex-col hover:shadow-xl hover:scale-105 transition-all duration-500 group hover-lift`}>
      {/* Shimmer effect */}
      <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 animate-shimmer rounded-2xl" />
      
      <div className="px-6 py-8 flex flex-col flex-1 relative z-10">
        <div className="mb-4">
          <span className="inline-flex px-3 py-1 rounded-md text-xs font-semibold text-white transition-all duration-300" style={{background: gradient}}>{ribbon}</span>
        </div>
        <div className="flex items-end gap-2 text-slate-900 group-hover:text-blue-600 transition-colors duration-300">
          <span className="text-5xl font-extrabold tracking-tight group-hover:scale-110 transition-transform duration-300">{price}</span>
          <div className="pb-2 leading-none">
            <span className="align-baseline text-lg font-bold">{unit}</span>
            <span className="block text-xs text-slate-500">/Th√°ng</span>
          </div>
        </div>
        <p className="mt-5 text-sm text-slate-600 group-hover:text-slate-700 transition-colors duration-300">
          {note || "G√≥i t√≠nh nƒÉng ph√π h·ª£p cho nhu c·∫ßu."}
        </p>
        <div className="mt-5 relative flex-1">
          <ul className="space-y-3">
            {visibleFeatures.map((f, i) => (
              <li key={i} className="flex items-start gap-3 text-slate-700 text-sm group-hover:text-slate-800 transition-all duration-300 group-hover:translate-x-1" style={{transitionDelay: `${i * 30}ms`}}>
                <CheckCircle2 className="mt-0.5 text-emerald-600 group-hover:text-emerald-700 transition-all duration-300" size={16}/>
                <span>{f}</span>
              </li>
            ))}
          </ul>
          {!showAll && hasMore && (
            <div className="pointer-events-none absolute inset-x-0 bottom-0 h-12 bg-gradient-to-t from-white to-transparent" />
          )}
        </div>
        {hasMore && (
          <button onClick={() => setShowAll(!showAll)} className="mt-4 text-xs font-semibold text-blue-700 hover:text-blue-800 inline-flex items-center">
            {showAll ? "Thu g·ªçn" : "Xem th√™m"}
          </button>
        )}
        <div className="mt-auto pt-6">
          <GButton as="button" className="w-full rounded-full justify-center" gradient={highlight ? 'secondary' : 'primary'}>
            MUA NGAY
          </GButton>
        </div>
      </div>
      
      {/* Floating particles */}
      <div className="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-500">
        <div className="w-2 h-2 bg-blue-400 rounded-full animate-float" style={{animationDelay: '0s'}} />
        <div className="w-1 h-1 bg-cyan-400 rounded-full animate-float mt-2" style={{animationDelay: '0.5s'}} />
        <div className="w-1.5 h-1.5 bg-sky-400 rounded-full animate-float mt-1" style={{animationDelay: '1s'}} />
      </div>
    </div>
  );
}


function Pricing(){
  const plans = [
    {
      ribbon: "D√πng Th·ª≠ Mi·ªÖn Ph√≠",
      gradient: "linear-gradient(135deg, #3B82F6, #06B6D4)",
      price: "Free",
      unit: "",
      note: "ƒê·∫ßy ƒë·ªß t√≠nh nƒÉng nh∆∞ng gi·ªõi h·∫°n t√†i nguy√™n (dung l∆∞·ª£ng, s·ªë l·∫ßn AI/ng√†y, bƒÉng th√¥ng).",
      features: [
        // Upload & AI ƒë·ªÅ thi
        "AI Ph√¢n t√≠ch t√†i li·ªáu b√†i gi·∫£ng",
        "AI T·∫°o ƒë·ªÅ thi t·ª´ t√†i li·ªáu",
        "AI T·∫°o ƒë·ªÅ thi t·ª´ ·∫£nh ch·ª•p (OCR)",
        "AI ph√¢n t√≠ch bu·ªïi d·∫°y",
        "AI ƒë√°nh gi√° performance h·ªçc sinh trong bu·ªïi h·ªçc",
        "Ch·ªânh s·ª≠a ƒë∆∞·ª£c c√¢u h·ªèi",
        "Publish / Unpublish ƒë·ªÅ thi",
        "Live Teach (gi·∫£ng d·∫°y th·ªùi gian th·ª±c)",
        // D·∫°y & ph√¢n t√≠ch bu·ªïi d·∫°y
        "Xem l·ªãch d·∫°y h·ªçc",
        "Check-in bu·ªïi d·∫°y",      
        // Ki·ªÉm tra ‚Äì ƒë√°nh gi√°
        "Ch·ªçn b√†i thi v√† l√†m ki·ªÉm tra",
        "Xem ƒëi·ªÉm v√† ƒë√°p √°n",
        "T·ª± t·∫°o ƒë·ªÅ √¥n t·∫≠p d·ª±a theo d·∫°ng ƒë·ªÅ v·ª´a l√†m",
        "Xem t√†i li·ªáu m√† gi√°o vi√™n publish trong bu·ªïi h·ªçc",
        // Qu·∫£n l√Ω
        "L√™n l·ªãch d·∫°y cho gi√°o vi√™n",
        "Ghi nh·∫≠n bu·ªïi d·∫°y cho gi√°o vi√™n",
        "Qu·∫£n l√Ω gi√°o vi√™n",
        "Qu·∫£n l√Ω h·ªçc tr√≤",
        "Qu·∫£n l√Ω l·ªõp h·ªçc",
        "Qu·∫£n l√Ω h·ªì s∆° nh√¢n vi√™n",

      ],
    },
  
    {
      ribbon: "Basic",
      gradient: "linear-gradient(135deg, #3B82F6, #06B6D4)",
      price: "300",
      unit: "000ƒë",
      note: "B·ªô t√≠nh nƒÉng n·ªÅn t·∫£ng cho trung t√¢m nh·ªè.",
      features: [
        "X·ª≠ l√Ω upload PDF/TXT < 10MB",
        "AI Ph√¢n t√≠ch t√†i li·ªáu b√†i gi·∫£ng",
        "AI T·∫°o ƒë·ªÅ thi t·ª´ t√†i li·ªáu",
        "ƒêa d·∫°ng lo·∫°i c√¢u h·ªèi",
        "Publish / Unpublish ƒë·ªÅ thi",
        "Ch·ªçn b√†i thi v√† l√†m ki·ªÉm tra",
        "Xem ƒëi·ªÉm v√† ƒë√°p √°n",
        "L√™n l·ªãch d·∫°y cho gi√°o vi√™n",
        "Ghi nh·∫≠n bu·ªïi d·∫°y",
      ],
    },
  
    {
      ribbon: "Advance",
      gradient: "linear-gradient(135deg, #22D3EE, #3B82F6)",
      price: "3.000",
      unit: "000ƒë",
      note: "M·ªü r·ªông cho v·∫≠n h√†nh l·ªõp h·ªçc ch·ªß ƒë·ªông.",
      features: [
        "Bao g·ªìm ph·∫ßn l·ªõn Basic",
        "Ch·ªânh s·ª≠a ƒë∆∞·ª£c c√¢u h·ªèi",
        "Check-in bu·ªïi d·∫°y",
        "AI T·∫°o ƒë·ªÅ thi t·ª´ ·∫£nh ch·ª•p (OCR)",
        "Live Teach (gi·∫£ng d·∫°y th·ªùi gian th·ª±c)",
        "AI ph√¢n t√≠ch bu·ªïi d·∫°y",
        "Qu·∫£n l√Ω gi√°o vi√™n / h·ªçc tr√≤ / l·ªõp h·ªçc",
      ],
    },
  
    {
      ribbon: "Pro",
      gradient: "linear-gradient(135deg, #A855F7, #3B82F6)",
      price: "5.000",
      unit: "000ƒë",
      note: "B·ªï sung c√°c module v·∫≠n h√†nh n√¢ng cao.",
      features: [
        "Bao g·ªìm ph·∫ßn l·ªõn Advance",
        "X·ª≠ l√Ω upload PDF/TXT > 10MB",
        "AI ƒë√°nh gi√° performance h·ªçc sinh trong bu·ªïi h·ªçc",
        "T·ª± t·∫°o ƒë·ªÅ √¥n t·∫≠p theo ch∆∞∆°ng/b√†i",
        "Xem t√†i li·ªáu gi√°o vi√™n publish trong bu·ªïi h·ªçc",
        "Xem b√°o c√°o qu√° tr√¨nh h·ªçc t·∫≠p c√° nh√¢n",
        "Qu·∫£n l√Ω h·ªì s∆° nh√¢n vi√™n",
        "K·∫ø to√°n",
        "Chatbot t∆∞ v·∫•n",
      ],
    },
  ];
  
  

  return (
    <GSection id="pricing" gradient="primary" className="py-16 sm:py-20">
      <div className={`${container}`}>
        <div className="text-center max-w-3xl mx-auto mb-10 animate-fade-in-up">
          <h2 className="text-3xl sm:text-4xl font-extrabold tracking-tight text-white animate-scale-in stagger-1">Gi√° D·ªãch V·ª•</h2>
          <p className="mt-3 text-white/90 animate-fade-in-up stagger-2">Ch·ªçn g√≥i ph√π h·ª£p v·ªõi giai ƒëo·∫°n ph√°t tri·ªÉn c·ªßa trung t√¢m.</p>
        </div>

        {/* Grid 3 c·ªôt + nh·∫•n card gi·ªØa b·∫±ng arbitrary-variants */}
        <div
          className="
            grid gap-6
            grid-cols-1
            sm:grid-cols-2
            lg:grid-cols-4
            [grid-auto-rows:1fr]
          "
        >
          {plans.map((p, index) => (
            <div key={p.ribbon} className={`h-full animate-bounce-in stagger-${index + 3}`}>
              <PlanCard {...p} />
            </div>
          ))}
        </div>
      </div>
    </GSection>
  );
}



function TestimonialCard({name, title, quote, avatar, className = "", style = {}}){
  return (
    <div className={`group relative ${className}`} style={style}>
      <div className="absolute -inset-1 rounded-3xl bg-gradient-to-r from-blue-600/20 to-indigo-600/20 blur opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
      <div className="relative rounded-3xl bg-white p-8 shadow-lg ring-1 ring-slate-200 group-hover:shadow-xl group-hover:ring-blue-200 transition-all duration-500 hover-lift">
        {/* Shimmer effect */}
        <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 animate-shimmer rounded-3xl" />
        
        <div className="flex items-start gap-4 mb-6 relative z-10">
          <div className="flex-shrink-0">
            <div className="h-14 w-14 rounded-2xl bg-gradient-to-br from-blue-600 to-blue-700 flex items-center justify-center text-white font-bold text-lg shadow-lg transition-all duration-300">
              {avatar}
            </div>
          </div>
          <div className="flex-1">
            <div className="flex items-center gap-2 mb-2">
              {[...Array(5)].map((_, i) => (
                <Star key={i} size={16} className="text-yellow-400 fill-current"/>
              ))}
            </div>
            <p className="font-bold text-slate-900 text-lg group-hover:text-blue-700 transition-colors duration-300">{name}</p>
            <p className="text-slate-600 font-medium group-hover:text-slate-700 transition-colors duration-300">{title}</p>
          </div>
        </div>
        <blockquote className="text-slate-700 leading-relaxed text-lg italic group-hover:text-slate-800 transition-colors duration-300 relative z-10">
          "{quote}"
        </blockquote>
        
        {/* Floating particles */}
        <div className="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-500">
          <div className="w-2 h-2 bg-blue-400 rounded-full animate-float" style={{animationDelay: '0s'}} />
          <div className="w-1 h-1 bg-cyan-400 rounded-full animate-float mt-2" style={{animationDelay: '0.5s'}} />
          <div className="w-1.5 h-1.5 bg-sky-400 rounded-full animate-float mt-1" style={{animationDelay: '1s'}} />
        </div>
      </div>
    </div>
  );
}

function Testimonials(){
  const items = [
    {
      name: "Nguy·ªÖn H∆∞∆°ng",
      title: "Gi√°m ƒë·ªëc Trung t√¢m Alpha",
      quote: "EduCRM gi√∫p ƒë·ªôi ng≈© gi·∫£m 40% th·ªùi gian nh·∫≠p li·ªáu v√† theo d√µi h·ªçc vi√™n t·ªët h∆°n. Giao di·ªán th√¢n thi·ªán, d·ªÖ s·ª≠ d·ª•ng.",
      avatar: "NH"
    },
    {
      name: "Tr·∫ßn Minh",
      title: "Qu·∫£n l√Ω Tuy·ªÉn sinh",
      quote: "Pipeline r√µ r√†ng, t·ª∑ l·ªá chuy·ªÉn ƒë·ªïi tƒÉng ƒë√°ng k·ªÉ ch·ªâ sau 2 tu·∫ßn s·ª≠ d·ª•ng. H·ªó tr·ª£ kh√°ch h√†ng r·∫•t nhi·ªát t√¨nh.",
      avatar: "TM"
    },
    {
      name: "L√™ Th·ªã Mai",
      title: "Hi·ªáu tr∆∞·ªüng Tr∆∞·ªùng THCS",
      quote: "T√≠nh nƒÉng qu·∫£n l√Ω l·ªõp h·ªçc v√† th·ªùi kh√≥a bi·ªÉu r·∫•t ti·ªán l·ª£i. Gi√∫p nh√† tr∆∞·ªùng v·∫≠n h√†nh hi·ªáu qu·∫£ h∆°n.",
      avatar: "LM"
    },
  ];
  return (
    <GSection gradient="primary" id="testimonials">
      <div className={`${container} ${section}`}>
        <div className="text-center max-w-3xl mx-auto mb-16 animate-fade-in-up">
          <h3 className="text-3xl sm:text-4xl font-bold text-white mb-6 animate-scale-in stagger-1">Kh√°ch h√†ng n√≥i g√¨?</h3>
          <p className="text-xl text-white/90 animate-fade-in-up stagger-2">Nh·ªØng ph·∫£n h·ªìi th·ª±c t·∫ø t·ª´ c√°c trung t√¢m ƒë√£ tri·ªÉn khai EduCRM</p>
        </div>
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {items.map((t, index) => <TestimonialCard key={t.name} {...t} className={`animate-bounce-in stagger-${index + 3}`} />)}
        </div>
      </div>
    </GSection>
  );
}

function FAQ(){
  const [open, setOpen] = useState(0);
  const faqs = [
    {
      q: "Tri·ªÉn khai & th·ªùi gian th·ª±c hi·ªán",
      a: "XinKEdu tri·ªÉn khai theo quy tr√¨nh chu·∫©n g·ªìm kh·∫£o s√°t nhanh nhu c·∫ßu, c·∫•u h√¨nh m·∫´u (l·ªõp, m√¥n, gi√°o vi√™n, ph√¢n quy·ªÅn), nh·∫≠p d·ªØ li·ªáu ban ƒë·∫ßu v√† ƒë√†o t·∫°o s·ª≠ d·ª•ng. V·ªõi g√≥i cloud, th·ªùi gian th∆∞·ªùng 1‚Äì3 ng√†y l√†m vi·ªác. N·∫øu c√≥ tu·ª≥ bi·∫øn ƒë·∫∑c th√π ho·∫∑c t√≠ch h·ª£p h·ªá th·ªëng s·∫µn c√≥, ch√∫ng t√¥i l√™n k·∫ø ho·∫°ch m·ªëc nghi·ªám thu r√µ r√†ng ƒë·ªÉ b·∫£o ƒë·∫£m ti·∫øn ƒë·ªô."
    },
    {
      q: "B·∫£o m·∫≠t d·ªØ li·ªáu & tu√¢n th·ªß",
      a: "D·ªØ li·ªáu ƒë∆∞·ª£c m√£ ho√° khi truy·ªÅn v√† khi l∆∞u, ph√¢n quy·ªÅn theo vai tr√≤ (RBAC), ghi nh·∫≠t k√Ω truy c·∫≠p v√† sao l∆∞u ƒë·ªãnh k·ª≥. Ch√∫ng t√¥i √°p d·ª•ng nguy√™n t·∫Øc t·ªëi thi·ªÉu ƒë·∫∑c quy·ªÅn, ki·ªÉm th·ª≠ ƒë·ªãnh k·ª≥ v√† c·∫£nh b√°o b·∫•t th∆∞·ªùng. H·∫° t·∫ßng t√°ch bi·ªát theo kh√°ch h√†ng; c√≥ tu·ª≥ ch·ªçn v√πng l∆∞u tr·ªØ g·∫ßn Vi·ªát Nam. T√†i li·ªáu quy tr√¨nh backup/restore s·∫µn s√†ng cung c·∫•p khi k√≠ch ho·∫°t."
    },
    {
      q: "T√≠nh nƒÉng AI & OCR ƒë·ªÅ thi",
      a: "AI h·ªó tr·ª£ g·ª£i √Ω n·ªôi dung d·∫°y, t·∫°o nhanh ng√¢n h√†ng c√¢u h·ªèi theo c·∫•p ƒë·ªô kh√≥, v√† ph√¢n t√≠ch bu·ªïi d·∫°y ƒë·ªÉ ƒë∆∞a ra ƒëi·ªÉm n·ªïi b·∫≠t, vi·ªác c·∫ßn l√†m. V·ªõi OCR, b·∫°n t·∫£i ·∫£nh/PDF, h·ªá th·ªëng nh·∫≠n d·∫°ng v√† chuy·ªÉn th√†nh c√¢u h·ªèi c√≥ th·ªÉ ch·ªânh s·ª≠a, gi·ªØ ƒë∆∞·ª£c k√Ω hi·ªáu m√¥n t·ª± nhi√™n. C√≥ th·ªÉ xu·∫•t sang Word/PDF ho·∫∑c ƒë∆∞a th·∫≥ng v√†o ng√¢n h√†ng c√¢u h·ªèi."
    },
    {
      q: "T√≠ch h·ª£p SSO, API & nh·∫≠p d·ªØ li·ªáu",
      a: "H·ªá th·ªëng h·ªó tr·ª£ SSO Google/Microsoft, r√†ng bu·ªôc mi·ªÅn email v√† k·∫øt h·ª£p x√°c th·ª±c n·ªôi b·ªô n·∫øu c·∫ßn. Ch√∫ng t√¥i cung c·∫•p API REST c√πng webhook ƒë·ªÉ k·∫øt n·ªëi CRM/k·∫ø to√°n/LMS. Vi·ªác nh·∫≠p d·ªØ li·ªáu ban ƒë·∫ßu d√πng CSV/XLSX/Google Sheets v·ªõi tr√¨nh √°nh x·∫° tr∆∞·ªùng tr·ª±c quan, ki·ªÉm tra l·ªói ngay khi t·∫£i l√™n v√† h∆∞·ªõng d·∫´n s·ª≠a nhanh tr∆∞·ªõc khi ghi nh·∫≠n."
    },
    {
      q: "Quy m√¥, hi·ªáu nƒÉng & ph√¢n quy·ªÅn",
      a: "XinKEdu ph·ª•c v·ª• t·ª´ v√†i trƒÉm t·ªõi h√†ng ch·ª•c ngh√¨n h·ªçc vi√™n. C√≥ ƒëa c∆° s·ªü/campus v·ªõi b√°o c√°o theo t·ª´ng c∆° s·ªü ho·∫∑c t·ªïng h·ª£p. Ph√¢n quy·ªÅn chi ti·∫øt theo vai tr√≤ v√† ph·∫°m vi (kh·ªëi l·ªõp, c∆° s·ªü), h·ªó tr·ª£ ph√™ duy·ªát thao t√°c nh·∫°y c·∫£m. Ki·∫øn tr√∫c linh ho·∫°t gi√∫p m·ªü r·ªông t√†i nguy√™n theo nhu c·∫ßu th·ª±c t·∫ø m√† kh√¥ng gi√°n ƒëo·∫°n ho·∫°t ƒë·ªông gi·∫£ng d·∫°y."
    },
    {
      q: "D√πng th·ª≠, gi√° & ho√° ƒë∆°n",
      a: "B·∫°n ƒë∆∞·ª£c d√πng th·ª≠ 14 ng√†y v·ªõi c√°c t√≠nh nƒÉng c·ªët l√µi. Khi n√¢ng c·∫•p, to√†n b·ªô d·ªØ li·ªáu d√πng th·ª≠ ƒë∆∞·ª£c gi·ªØ nguy√™n. Ch√∫ng t√¥i h·ªó tr·ª£ thanh to√°n theo th√°ng/nƒÉm, c√≥ ∆∞u ƒë√£i cho thanh to√°n d√†i h·∫°n v√† t·ªï ch·ª©c gi√°o d·ª•c phi l·ª£i nhu·∫≠n. Xu·∫•t ho√° ƒë∆°n VAT ƒë·∫ßy ƒë·ªß; m·ªçi chi ph√≠ tu·ª≥ bi·∫øn (n·∫øu c√≥) ƒë∆∞·ª£c b√≥c t√°ch minh b·∫°ch theo h·∫°ng m·ª•c."
    },
    {
      q: "H·ªó tr·ª£ k·ªπ thu·∫≠t, SLA & d·ªØ li·ªáu sau d√πng th·ª≠",
      a: "H·ªó tr·ª£ qua email/chat trong gi·ªù l√†m vi·ªác; g√≥i Pro/Enterprise c√≥ k√™nh ∆∞u ti√™n v·ªõi SLA ph·∫£n h·ªìi/kh·∫Øc ph·ª•c r√µ r√†ng. Ch√∫ng t√¥i cung c·∫•p t√†i li·ªáu, video h∆∞·ªõng d·∫´n v√† ƒë√†o t·∫°o ƒë·ªãnh k·ª≥ khi c√≥ c·∫≠p nh·∫≠t l·ªõn. Sau d√πng th·ª≠, d·ªØ li·ªáu ƒë∆∞·ª£c gi·ªØ 30 ng√†y ƒë·ªÉ b·∫°n n√¢ng c·∫•p ho·∫∑c xu·∫•t ra; qu√° th·ªùi h·∫°n, h·ªá th·ªëng xo√° an to√†n theo quy tr√¨nh chu·∫©n."
    }
  ];
  
  
  return (
    <section id="faq" className="bg-white">
      <div className={`${container} ${section}`}>
        <h3 className="text-2xl sm:text-3xl font-bold text-slate-900 text-center animate-fade-in-up animate-scale-in stagger-1">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h3>
        <div className="mt-8 max-w-3xl mx-auto divide-y divide-slate-200 rounded-2xl bg-white ring-1 ring-slate-200 animate-fade-in-up stagger-2">
          {faqs.map((f, i) => (
            <button
              key={i}
              className={`w-full text-left px-6 py-5 hover:bg-slate-50 transition-all duration-300 group animate-slide-up-stagger stagger-${i + 3}`}
              onClick={() => setOpen(open === i ? -1 : i)}
            >
              <div className="flex items-center justify-between">
                <p className="font-medium text-slate-900 group-hover:text-blue-700 transition-colors duration-300">{f.q}</p>
                <span className={`text-blue-600 font-semibold transition-all duration-300 group-hover:scale-110 ${open === i ? "rotate-180" : ""}`}>
                  {open === i ? "‚Äì" : "+"}
                </span>
              </div>
              {open === i && (
                <p className="mt-2 text-slate-600 animate-fade-in-up">{f.a}</p>
              )}
            </button>
          ))}
        </div>
      </div>
    </section>
  );
}

function Contact() {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    message: "",
  });

  const handleSubmit = async (e) => {
    e.preventDefault();
    const res = await axios.post("https://xink-edu-backend-459095746983.asia-southeast1.run.app/contact", formData);
    console.log(res);
    if(res.status === 200){
    alert("C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá! Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong v√≤ng 24h.");
    } else {
      alert("L·ªói khi g·ª≠i li√™n h·ªá! Vui l√≤ng th·ª≠ l·∫°i.");
    }
  };

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  return (
    <GSection gradient="secondary" id="contact">
      <div className={`${container} ${section}`}>
        <div className="grid lg:grid-cols-2 gap-10 lg:gap-12 items-start">
          {/* LEFT: Copy + Contact cards */}
          <div className="space-y-8 animate-fade-in-up">
            <div>
              <h3 className="text-3xl sm:text-4xl font-bold text-white mb-4 animate-scale-in stagger-1">
                Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£
              </h3>
              <p className="text-lg sm:text-xl text-white/85 leading-relaxed animate-fade-in-up stagger-2">
                ƒêi·ªÅn th√¥ng tin ƒë·ªÉ nh·∫≠n t∆∞ v·∫•n & demo theo nhu c·∫ßu. <b>Ph·∫£n h·ªìi
                trong 24h.</b>
              </p>
            </div>

            {/* Cards */}
            <div className="space-y-5 md:space-y-6">
              {/* HOTLINE */}
              <div
                className="relative group flex items-center gap-4 p-4 md:p-5 rounded-2xl
                           bg-white/35 border border-white/50 backdrop-blur
                           shadow-lg transition-all duration-300 hover-lift
                           animate-slide-up-stagger stagger-3"
              >
                <div
                  className="relative size-11 grid place-items-center rounded-xl
                             bg-white/70 text-sky-600 shadow-inner"
                  aria-hidden="true"
                >
                  {/* ping */}
                  <span className="absolute -right-1 -top-1 h-2 w-2 rounded-full bg-emerald-400">
                    <span className="absolute inset-0 rounded-full bg-emerald-400 animate-ping" />
                  </span>
                  <Phone size={24} />
                </div>

                <div className="flex-1 min-w-0">
                  <div className="flex items-center gap-2">
                    <p className="font-semibold text-white">Hotline</p>
                    <span
                      className="text-[11px] px-2 py-0.5 rounded-full
                                 bg-emerald-400/20 text-emerald-50 border border-emerald-300/40"
                    >
                      Tr·ª±c 24/7
                    </span>
                  </div>
                  <a
                    href="tel:0862706996"
                    className="text-white/85 font-medium hover:text-white transition-colors"
                  >
                    086.270.6996
                  </a>
                </div>

                {/* glow */}
                <span
                  className="pointer-events-none absolute inset-0 rounded-2xl
                             ring-0 ring-white/0 group-hover:ring-2 group-hover:ring-white/40
                             transition-all duration-300"
                />
              </div>

              {/* EMAIL */}
              <div
                className="relative group flex items-center gap-4 p-4 md:p-5 rounded-2xl
                           bg-white/35 border border-white/50 backdrop-blur
                           shadow-lg transition-all duration-300 hover-lift
                           animate-slide-up-stagger stagger-4"
              >
                <div
                  className="relative size-11 grid place-items-center rounded-xl
                             bg-white/70 text-sky-600 shadow-inner"
                  aria-hidden="true"
                >
                  <Mail size={24} />
                </div>

                <div className="flex-1 min-w-0">
                  <p className="font-semibold text-white">Email</p>
                  <a
                    href="mailto:edu@xinkgroup.com"
                    className="text-white/85 font-medium hover:text-white break-words transition-colors"
                  >
                    edu@xinkgroup.com
                  </a>
                </div>

                <span
                  className="pointer-events-none absolute inset-0 rounded-2xl
                             ring-0 ring-white/0 group-hover:ring-2 group-hover:ring-white/40
                             transition-all duration-300"
                />
              </div>

              {/* ADDRESS */}
              <div
                className="relative group flex items-center gap-4 p-4 md:p-5 rounded-2xl
                           bg-white/35 border border-white/50 backdrop-blur
                           shadow-lg transition-all duration-300 hover-lift
                           animate-slide-up-stagger stagger-5"
              >
                <div
                  className="relative size-11 grid place-items-center rounded-xl
                             bg-white/70 text-sky-600 shadow-inner"
                  aria-hidden="true"
                >
                  <MapPin size={24} />
                </div>

                <div className="flex-1 min-w-0">
                  <p className="font-semibold text-white">ƒê·ªãa ch·ªâ</p>
                  <p className="text-white/85 font-medium leading-relaxed">
                    T·∫ßng 4, T√≤a ICT1, Khu C√¥ng vi√™n ph·∫ßn m·ªÅm s·ªë 2 ƒë∆∞·ªùng Nh∆∞
                    Nguy·ªát, Ph∆∞·ªùng H·∫£i Ch√¢u, Th√†nh ph·ªë ƒê√† N·∫µng
                  </p>
                </div>

                <span
                  className="pointer-events-none absolute inset-0 rounded-2xl
                             ring-0 ring-white/0 group-hover:ring-2 group-hover:ring-white/40
                             transition-all duration-300"
                />
              </div>
            </div>
          </div>

          {/* RIGHT: Form */}
          <form onSubmit={handleSubmit} className="space-y-6 animate-fade-in-up stagger-6">
            <div className="rounded-2xl p-8 shadow-xl shadow-blue-600/10 ring-1 ring-slate-200 bg-white">
              <h4 className="text-2xl font-bold text-slate-900 mb-6">G·ª≠i y√™u c·∫ßu t∆∞ v·∫•n</h4>

              <div className="grid grid-cols-1 sm:grid-cols-2 gap-5">
  {/* H·ªç v√† t√™n */}
  <div className="space-y-2">
    <label htmlFor="contact-name" className="block text-sm font-semibold text-slate-700">
      H·ªç v√† t√™n <span className="text-rose-500">*</span>
    </label>
    <input
      id="contact-name"
      type="text"
      name="name"
      value={formData.name}
      onChange={handleChange}
      autoComplete="name"
      required
      className="w-full h-11 px-4 rounded-xl border border-slate-200 bg-white/90 text-slate-900 placeholder:text-slate-400 focus:border-sky-400 focus:ring-4 focus:ring-sky-200/60 outline-none transition-all"
      placeholder="Nguy·ªÖn VƒÉn A"
    />
  </div>

  {/* Trung t√¢m ƒëang ho·∫°t ƒë·ªông */}
  <div className="space-y-2">
    <label htmlFor="contact-center" className="block text-sm font-semibold text-slate-700">
      Trung t√¢m ƒëang ho·∫°t ƒë·ªông <span className="text-rose-500">*</span>
    </label>
    <input
      id="contact-center"
      type="text"
      name="center"
      value={formData.center}
      onChange={handleChange}
      required
      className="w-full h-11 px-4 rounded-xl border border-slate-200 bg-white/90 text-slate-900 placeholder:text-slate-400 focus:border-sky-400 focus:ring-4 focus:ring-sky-200/60 outline-none transition-all"
      placeholder="VD: XinK Language Center"
    />
  </div>

  {/* Email */}
  <div className="space-y-2">
    <label htmlFor="contact-email" className="block text-sm font-semibold text-slate-700">
      Email <span className="text-rose-500">*</span>
    </label>
    <input
      id="contact-email"
      type="email"
      name="email"
      value={formData.email}
      onChange={handleChange}
      autoComplete="email"
      required
      className="w-full h-11 px-4 rounded-xl border border-slate-200 bg-white/90 text-slate-900 placeholder:text-slate-400 focus:border-sky-400 focus:ring-4 focus:ring-sky-200/60 outline-none transition-all"
      placeholder="ban@congty.com"
    />
  </div>

  {/* S·ªë ƒëi·ªán tho·∫°i (VN) */}
  <div className="space-y-2">
    <label htmlFor="contact-phone" className="block text-sm font-semibold text-slate-700">
      S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá <span className="text-rose-500">*</span>
    </label>
    <input
      id="contact-phone"
      type="tel"
      name="phone"
      value={formData.phone}
      onChange={handleChange}
      inputMode="tel"
      required
      pattern="^(\+84|0)\d{9,10}$"
      className="w-full h-11 px-4 rounded-xl border border-slate-200 bg-white/90 text-slate-900 placeholder:text-slate-400 focus:border-sky-400 focus:ring-4 focus:ring-sky-200/60 outline-none transition-all"
      placeholder="0862706996 ho·∫∑c +84862706996"
    />
    <p className="text-xs text-slate-500">ƒê·ªãnh d·∫°ng: 0XXXXXXXXX ho·∫∑c +84XXXXXXXXX</p>
  </div>

  {/* Nhu c·∫ßu (full width) */}
  <div className="sm:col-span-2 space-y-2">
    <label htmlFor="contact-message" className="block text-sm font-semibold text-slate-700">
      Nhu c·∫ßu c·ªßa b·∫°n <span className="text-rose-500">*</span>
    </label>
    <textarea
      id="contact-message"
      rows={4}
      name="message"
      value={formData.message}
      onChange={handleChange}
      required
      className="w-full px-4 py-3 rounded-xl border border-slate-200 bg-white/90 text-slate-900 placeholder:text-slate-400 focus:border-sky-400 focus:ring-4 focus:ring-sky-200/60 outline-none transition-all resize-none"
      placeholder="M√¥ t·∫£ ng·∫Øn (s·ªë l·ªõp, t√≠nh nƒÉng c·∫ßn, th·ªùi gian d·ª± ki·∫øn...)"
    />
  </div>
</div>


              <GButton
                as="button"
                type="submit"
                gradient="secondary"
                className="w-full mt-8 h-12 text-base font-semibold justify-center ring-1 ring-white/20 hover:ring-white/30 focus:outline-none focus:ring-2 focus:ring-white/60 focus:ring-offset-2 focus:ring-offset-white"
              >
                <MessageCircle size={20} className="mr-2" />
                G·ª≠i y√™u c·∫ßu t∆∞ v·∫•n
              </GButton>

              <p className="text-center text-sm text-slate-500 mt-4">
                Ch√∫ng t√¥i cam k·∫øt b·∫£o m·∫≠t th√¥ng tin c·ªßa b·∫°n.
              </p>
            </div>
          </form>
        </div>
      </div>
    </GSection>
  );
}


function Footer(){
  return (
    <footer className="bg-gradient-to-br from-slate-900 to-slate-800 text-slate-300">
      <div className={`${container} py-16`}>
        <div className="grid md:grid-cols-4 gap-8 mb-12">
          <div className="md:col-span-2">
            <div className="flex items-center gap-3 mb-6">
              <span className="font-bold text-white text-xl">XinKEdu</span>
            </div>
            <p className="text-slate-400 leading-relaxed mb-6 max-w-md">
              Gi·∫£i ph√°p to√†n di·ªán cho gi√°o d·ª•c. T·ªëi ∆∞u v·∫≠n h√†nh, tƒÉng tr∆∞·ªüng b·ªÅn v·ªØng.
            </p>
            <div className="flex gap-4">
              <div className="p-3 rounded-xl bg-slate-800 hover:bg-slate-700 transition-colors cursor-pointer">
                <Phone size={20} className="text-blue-400"/>
              </div>
              <div className="p-3 rounded-xl bg-slate-800 hover:bg-slate-700 transition-colors cursor-pointer">
                <Mail size={20} className="text-green-400"/>
              </div>
              <div className="p-3 rounded-xl bg-slate-800 hover:bg-slate-700 transition-colors cursor-pointer">
                <MapPin size={20} className="text-purple-400"/>
              </div>
            </div>
            <div className="mt-6 text-slate-400 text-sm space-y-2 max-w-xl">
              <p className="text-white font-semibold">C√îNG TY C·ªî PH·∫¶N XINKGROUP</p>
              <p>M√£ s·ªë doanh nghi·ªáp: 0402241823. Gi·∫•y ch·ª©ng nh·∫≠n ƒëƒÉng k√Ω doanh nghi·ªáp do S·ªü K·∫ø ho·∫°ch v√† ƒê·∫ßu t∆∞ TP ƒê√† N·∫µng c·∫•p l·∫ßn ƒë·∫ßu ng√†y 12/07/2024.</p>
              <p>ƒê·ªãa ch·ªâ: L√¥ 8B2, An Th∆∞·ª£ng 37, Ph∆∞·ªùng M·ªπ An, Qu·∫≠n Ng≈© H√†nh S∆°n, Th√†nh ph·ªë ƒê√† N·∫µng, Vi·ªát Nam</p>
            </div>
          </div>

          <div>
            <h4 className="font-bold text-white mb-6">S·∫£n ph·∫©m</h4>
            <ul className="space-y-3 text-slate-400">
              <li><a href="#features" className="hover:text-white transition-colors">T√≠nh nƒÉng</a></li>
              <li><a href="#pricing" className="hover:text-white transition-colors">Gi√° d·ªãch v·ª•</a></li>
              <li><a href="#testimonials" className="hover:text-white transition-colors">ƒê√°nh gi√°</a></li>
              <li><a href="#demo" className="hover:text-white transition-colors">Demo</a></li>
            </ul>
          </div>

          <div>
            <h4 className="font-bold text-white mb-6">H·ªó tr·ª£</h4>
            <ul className="space-y-3 text-slate-400">
              <li><a href="#faq" className="hover:text-white transition-colors">FAQ</a></li>
              <li><a href="#contact" className="hover:text-white transition-colors">Li√™n h·ªá</a></li>
              <li><a href="#" className="hover:text-white transition-colors">T√†i li·ªáu</a></li>
              <li><a href="#" className="hover:text-white transition-colors">H∆∞·ªõng d·∫´n</a></li>
            </ul>
          </div>
        </div>

        <div className="border-t border-slate-700 pt-8">
          <div className="flex flex-col sm:flex-row items-center justify-between gap-4">
            <div className="text-slate-400 text-sm">¬© 2025 XinKGroup. All rights reserved.</div>
            <div className="flex gap-6 text-slate-400 text-sm">
              <a className="hover:text-white transition-colors" href="#">ƒêi·ªÅu kho·∫£n</a>
              <a className="hover:text-white transition-colors" href="#">B·∫£o m·∫≠t</a>
              <a className="hover:text-white transition-colors" href="#">Ch√≠nh s√°ch</a>
            </div>
          </div>
        </div>
      </div>
    </footer>
  );
}

export default function EduCRMLanding(){
  const [loginOpen, setLoginOpen] = useState(false);
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [showPassword, setShowPassword] = useState(false);

  const onOpenLogin = () => setLoginOpen(true);
  const onCloseLogin = () => setLoginOpen(false);
  const onSubmitLogin = (e) => {
    e.preventDefault();
    if (!email || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
      alert("Vui l√≤ng nh·∫≠p email h·ª£p l·ªá");
      return;
    }
    if (!password || password.length < 6) {
      alert("M·∫≠t kh·∫©u t·ªëi thi·ªÉu 6 k√Ω t·ª±");
      return;
    }
    alert("ƒêƒÉng nh·∫≠p th√†nh c√¥ng (demo)");
    onCloseLogin();
  };

  return (
    <div className="bg-white text-slate-800">
      <Navbar onOpenLogin={onOpenLogin}/>
   
      <Hero onOpenLogin={onOpenLogin}/>

      <Feature/>
      <Pricing/>
     
      <Metrics/>
      <Testimonials/>

      <FAQ/>
      <Contact/>
      <Footer/>

      {/* Floating Chatbot */}
      <ChatbotPopup />

      {loginOpen && (
        <div className="fixed inset-0 z-[100] flex items-center justify-center">
          <div className="absolute inset-0 bg-black/50" onClick={onCloseLogin} />
          <div className="relative z-[101] w-full max-w-md mx-4">
            <div className="overflow-hidden rounded-2xl bg-white shadow-2xl ring-1 ring-slate-200">
              <div className="px-6 py-5 border-b border-slate-200 flex items-center justify-between">
                <h4 className="text-lg font-bold text-slate-900">ƒêƒÉng nh·∫≠p ƒë·ªÉ d√πng th·ª≠</h4>
                <button onClick={onCloseLogin} className="rounded-lg p-2 hover:bg-slate-100">
                  <X size={18}/>
                </button>
              </div>
              <form onSubmit={onSubmitLogin} className="px-6 py-6 space-y-5">
                <div>
                  <label className="block text-sm font-semibold text-slate-700 mb-2">Email</label>
                  <input
                    type="email"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    placeholder="ban@congty.com"
                    required
                    className="w-full px-4 py-3 rounded-xl border-2 border-slate-200 focus:border-blue-600 focus:ring-4 focus:ring-blue-100 outline-none transition"
                  />
                </div>
                <div>
                  <label className="block text-sm font-semibold text-slate-700 mb-2">M·∫≠t kh·∫©u</label>
                  <div className="relative">
                    <input
                      type={showPassword ? "text" : "password"}
                      value={password}
                      onChange={(e) => setPassword(e.target.value)}
                      placeholder="T·ªëi thi·ªÉu 6 k√Ω t·ª±"
                      required
                      minLength={6}
                      className="w-full px-4 py-3 rounded-xl border-2 border-slate-200 focus:border-blue-600 focus:ring-4 focus:ring-blue-100 outline-none transition pr-12"
                    />
                    <button type="button" onClick={() => setShowPassword(!showPassword)} className="absolute inset-y-0 right-0 px-3 text-slate-500 hover:text-slate-700">
                      {showPassword ? "·∫®n" : "Hi·ªán"}
                    </button>
                  </div>
                </div>
                <GButton as="button" type="submit" className="w-full justify-center">ƒêƒÉng nh·∫≠p</GButton>
                <p className="text-center text-sm text-slate-500">Ch∆∞a c√≥ t√†i kho·∫£n? <a href="#contact" className="text-blue-600 hover:underline" onClick={() => setLoginOpen(false)}>ƒêƒÉng k√Ω</a></p>
              </form>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}